description = "Apereo CAS Core Configuration Model"

dependencies {
    implementation libraries.springsecurity
    implementation libraries.mongo
    implementation libraries.jasypt
    implementation libraries.groovy
    implementation libraries.bouncycastle

    compile libraries.springbootconfigmetadata
    
    api project(":api:cas-server-core-api-util")
    api project(":api:cas-server-core-api-authentication")
    api project(":api:cas-server-core-api-webflow")

    annotationProcessor libraries.springbootconfigmetadata
}

task generateConfigurationMetadata(type: JavaExec) {
    doFirst {
        logger.info "\nRunning CAS Spring configuration metadata processor in addition to the native " +
                "Spring Boot metadata processor, to create configuration " +
                "metadata for nested and indexed properties. The process starts with the build directory " +
                "at [$buildDir] for the CAS configuration module at [$projectDir.canonicalPath].\n"
    }
    main = "org.apereo.cas.configuration.metadata.ConfigurationMetadataGenerator"
    classpath = sourceSets.main.runtimeClasspath
    args buildDir, projectDir.canonicalPath
}

compileJava.dependsOn(processResources)

if (!Boolean.getBoolean("skipNestedConfigMetadataGen")) {
    jar.dependsOn(generateConfigurationMetadata)
}
